-- Autocmds are automatically loaded on the VeryLazy event
-- Default autocmds that are always set: https://github.com/LazyVim/LazyVim/blob/main/lua/lazyvim/config/autocmds.lua
-- Add any additional autocmds here
--
--
-- vim.api.nvim_create_autocmd({ "BufRead", "BufNewFile" }, {
-- pattern = { "*Dockerfile*" },
-- command = "set ft=Dockerfile",
-- })

-- vim.api.nvim_create_autocmd({ "BufWritePost", "BufEnter" }, {
--   pattern = { "*" },
--   command = "set nofoldenable foldmethod=manual foldlevelstart=99",
-- })

-- vim.api.nvim_create_autocmd({ "BufRead", "BufNewFile" }, {
-- pattern = { "*.yaml" },
-- command = "set ft=jinja",
-- })
-- If vim was started with arguments, do nothing
-- If in some project's root, attempt to restore that project's session
-- If not, restore last session
-- If no sessions, do nothing
-- local Session = require("projections.session")
-- vim.api.nvim_create_autocmd({ "VimEnter" }, {
-- callback = function()
-- if vim.fn.argc() ~= 0 then
-- return
-- end
-- local session_info = Session.info(vim.loop.cwd())
-- if session_info == nil then
-- Session.restore_latest()
-- else
-- Session.restore(vim.loop.cwd())
-- end
-- end,
-- desc = "Restore last session automatically",
-- })

-- local Session = require("projections.session")
-- vim.api.nvim_create_autocmd({ "VimEnter" }, {
--   callback = function()
--     if vim.fn.argc() ~= 0 then
--       return
--     end
--     local session_info = Session.info(vim.loop.cwd())
--     if session_info == nil then
--       Session.restore_latest()
--     else
--       Session.restore(vim.loop.cwd())
--     end
--   end,
--   desc = "Restore last session automatically",
-- })
--
--
-- vim.api.nvim_create_autocmd({ "BufEnter", "BufWritePost" }, {
--   pattern = { "*" },
--   command = "set nofoldenable foldmethod=manual foldlevelstart=99",
-- })
